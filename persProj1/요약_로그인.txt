# 요약.txt
# 로그인 / 회원가입 / 로그아웃
# 1) 세션을 이용한 방법  : spring
    => 1-1) 일반 로그인        : 인터셉터 이용(필터 또는)
    => 1-2) 스프링 시큐리티 방법 : 
# 2) 웹토큰을 이용한 방법 : spring boot
    => 1-2) 스프링 시큐리티 방법 : 
    
# 3) 쿠키 ? 로그인을 위한 정보(id/pwd) 를 저장하는 곳, 속도 향상
# 4) 세션 ? 보안을 위해 쿠키에 세션 id 를 저장해서 인증처리하는 방법, id/pwd 보관
# 5) 패스워드 암호화 없음 -> 암호화 추가해서 예제 진행 (라이브러리 추가 설치)
   => 암호화 방법 : bcryt 해싱 암호화
   
   
# 6) 로그인 진행
    1) 화면 디자인 / 컨트롤러 : 
    2) 로그인 버튼 클릭시 실행 : 
       2-1) jsp 에서 email(로그인id) 과 password 전달 받기
       2-2) email/password 가지고 DB 에 정보가 있는지 확인 : 인증
      ### 2-2-2) MemberMapper  :  인터페이스 , authenticate() 함수 작성                            
      ### 2-2-3) Member.xml    :  select sql 작성
      ### 2-2-4) MemberService :  인터페이스 , authenticateMember() 함수 작성
      ### 2-2-5) MemberServiceImpl : 위의 함수 재정의 , MemberMapper 객체 함수 실행
       2-3) 인증 OK(DB 에 유저가 있으면) : 세션에 email/password 넣기 
       2-4) 강제 첫페이지(홈화면)로 이동
       
# 7) 회원가입 : email/password 받아 db 에 저장(insert)
      ### 7-1) MemberMapper  :  인터페이스 , register() 함수 작성                            
      ### 7-2) Member.xml    :  insert sql 작성
      ### 7-3) MemberService :  인터페이스 , registerMember() 함수 작성
      ### 7-4) MemberServiceImpl : 위의 함수 재정의 , password 암호화(해싱 암호화)
                            MemberMapper 객체 함수 실행                         
      ### 7-5) MemberController : MemberService 함수 실행, 홈으로 강제이동
 




